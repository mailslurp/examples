//
// DomainInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@objc public class DomainInformation: NSObject, Codable, JSONEncodable {

    public enum DomainType: String, Codable, CaseIterable {
        case httpInbox = "HTTP_INBOX"
        case smtpDomain = "SMTP_DOMAIN"
    }
    public var domainName: String
    public var verified: Bool
    /** Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. */
    public var domainType: DomainType

    public init(domainName: String, verified: Bool, domainType: DomainType) {
        self.domainName = domainName
        self.verified = verified
        self.domainType = domainType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case domainName
        case verified
        case domainType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(domainName, forKey: .domainName)
        try container.encode(verified, forKey: .verified)
        try container.encode(domainType, forKey: .domainType)
    }
}

