//
// ImapAccessDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Access details for inbox using IMAP */
@objc public class ImapAccessDetails: NSObject, Codable, JSONEncodable {

    /** Secure TLS IMAP server host domain */
    public var secureImapServerHost: String
    /** Secure TLS IMAP server host port */
    public var secureImapServerPort: Int
    /** Secure TLS IMAP username for login */
    public var secureImapUsername: String
    /** Secure TLS IMAP password for login */
    public var secureImapPassword: String
    /** IMAP server host domain */
    public var imapServerHost: String
    /** IMAP server host port */
    public var imapServerPort: Int
    /** IMAP username for login */
    public var imapUsername: String
    /** IMAP password for login */
    public var imapPassword: String
    /** IMAP mailbox to SELECT */
    public var imapMailbox: String

    public init(secureImapServerHost: String, secureImapServerPort: Int, secureImapUsername: String, secureImapPassword: String, imapServerHost: String, imapServerPort: Int, imapUsername: String, imapPassword: String, imapMailbox: String) {
        self.secureImapServerHost = secureImapServerHost
        self.secureImapServerPort = secureImapServerPort
        self.secureImapUsername = secureImapUsername
        self.secureImapPassword = secureImapPassword
        self.imapServerHost = imapServerHost
        self.imapServerPort = imapServerPort
        self.imapUsername = imapUsername
        self.imapPassword = imapPassword
        self.imapMailbox = imapMailbox
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case secureImapServerHost
        case secureImapServerPort
        case secureImapUsername
        case secureImapPassword
        case imapServerHost
        case imapServerPort
        case imapUsername
        case imapPassword
        case imapMailbox
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(secureImapServerHost, forKey: .secureImapServerHost)
        try container.encode(secureImapServerPort, forKey: .secureImapServerPort)
        try container.encode(secureImapUsername, forKey: .secureImapUsername)
        try container.encode(secureImapPassword, forKey: .secureImapPassword)
        try container.encode(imapServerHost, forKey: .imapServerHost)
        try container.encode(imapServerPort, forKey: .imapServerPort)
        try container.encode(imapUsername, forKey: .imapUsername)
        try container.encode(imapPassword, forKey: .imapPassword)
        try container.encode(imapMailbox, forKey: .imapMailbox)
    }
}

